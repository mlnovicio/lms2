<?php
	require_once'config.php';
	
	class db_class extends db_connect{
		
		public function __construct(){
			$this->connect();
		}
		
		
		/* User Function */
		public function add_user2($username,$password,$firstname,$middlename,$lastname,$email,$address,$contact){
			$username= $this->conn->real_escape_string(trim($username));
			$password= $this->conn->real_escape_string(trim($password));
			$firstname= $this->conn->real_escape_string($firstname);
			$middlename= $this->conn->real_escape_string($middlename);
			$lastname= $this->conn->real_escape_string($lastname);
			$contact= $this->conn->real_escape_string($contact);
			$address= $this->conn->real_escape_string($address);
			$email= $this->conn->real_escape_string($email);
			$query=$this->conn->prepare("INSERT INTO `user` (`username`, `password`, `firstname`,middlename, `lastname`,contact_no,address,email) VALUES(?,?,?,?,?,?,?,?)") or die($this->conn->error);
			$query->bind_param("ssssssss", $username, $password, $firstname,$middlename, $lastname,$contact,$address,$email);
			
			if($query->execute()){
				$query->close();
				$this->conn->close();
				return true;
			}
		}

		public function add_user($username,$password,$firstname,$lastname,$type){
			$query=$this->conn->prepare("INSERT INTO `user` (`username`, `password`, `firstname`, `lastname`, `user_type`) VALUES(?, ?, ?, ?, ?)") or die($this->conn->error);
			$query->bind_param("ssss", $username, $password, $firstname, $lastname, $type);
			
			if($query->execute()){
				$query->close();
				$this->conn->close();
				return true;
			}
		}
		
		public function update_user($user_id,$username,$password,$firstname,$lastname){
			$query=$this->conn->prepare("UPDATE `user` SET `username`=?, `password`=?, `firstname`=?, `lastname`=? WHERE `user_id`=?") or die($this->conn->error);
			$query->bind_param("ssssi", $username, $password, $firstname, $lastname, $user_id);
			
			if($query->execute()){
				$query->close();
				$this->conn->close();
				return true;
			}
		}
		
		public function login($username, $password){
			$username=trim(htmlentities($username));
			$password=trim(htmlentities($password));

			$query=$this->conn->prepare("SELECT * FROM `user` WHERE `username`='$username' && `password`='$password'") or die($this->conn->error);
			if($query->execute()){
				
				$result=$query->get_result();
				
				$valid=$result->num_rows;
			
				$fetch=$result->fetch_array();
				
				return array(
					'user_id'=>isset($fetch['user_id']) ? $fetch['user_id'] : 0,
					'count'=>isset($valid) ? $valid: 0,
					'user_type'=>isset($fetch['user_type']) ? $fetch['user_type'] : 0

				);	
			}
		}
		
		public function user_acc($user_id){
			$query=$this->conn->prepare("SELECT * FROM `user` WHERE `user_id`='$user_id'") or die($this->conn->error);
			if($query->execute()){
				$result=$query->get_result();
				
				$valid=$result->num_rows;
			
				$fetch=$result->fetch_array();
				
				return $fetch['firstname']." ".$fetch['lastname'];	
			}
		}
		
		function hide_pass($str) {
			$len = strlen($str);
		
			return str_repeat('*', $len);
		}
		
		public function display_user(){
			$query=$this->conn->prepare("SELECT * FROM `user`") or die($this->conn->error);
			if($query->execute()){
				$result = $query->get_result();
				return $result;
			}
		}
		
		
		public function delete_user($user_id){
			$query=$this->conn->prepare("DELETE FROM `user` WHERE `user_id` = '$user_id'") or die($this->conn->error);
			if($query->execute()){
				$query->close();
				$this->conn->close();
				return true;
			}
		}
		
		
		/* Loan Type Function */
		
		public function save_ltype($ltype_name,$min,$max){
			$query=$this->conn->prepare("INSERT INTO `loan_type` (`ltype_name`, minloan,maxloan) VALUES(?, ?,?)") or die($this->conn->error);
			$query->bind_param("sii", $ltype_name,$min,$max);
			
			if($query->execute()){
				$query->close();
				$this->conn->close();
				return true;
			}
		}
		
		public function display_ltype(){
			$query=$this->conn->prepare("SELECT * FROM `loan_type`") or die($this->conn->error);
			if($query->execute()){
				$result = $query->get_result();
				return $result;
			}
		}
		
		public function delete_ltype($ltype_id){
			$query=$this->conn->prepare("DELETE FROM `loan_type` WHERE `ltype_id` = '$ltype_id'") or die($this->conn->error);
			if($query->execute()){
				$query->close();
				$this->conn->close();
				return true;
			}
		}
		
		public function update_ltype($ltype_id,$ltype_name){
			$query=$this->conn->prepare("UPDATE `loan_type` SET `ltype_name`=? WHERE `ltype_id`=?") or die($this->conn->error);
			$query->bind_param("si", $ltype_name,$ltype_id);
			
			if($query->execute()){
				$query->close();
				$this->conn->close();
				return true;
			}
		}
		
		
		/* Loan Plan Function */
		
		public function save_lplan($lplan_month,$lplan_interest,$lplan_penalty){
			$query=$this->conn->prepare("INSERT INTO `loan_plan` (`lplan_month`, `lplan_interest`, `lplan_penalty`) VALUES(?, ?, ?)") or die($this->conn->error);
			$query->bind_param("sss", $lplan_month, $lplan_interest, $lplan_penalty);
			
			if($query->execute()){
				$query->close();
				$this->conn->close();
				return true;
			}
		}
		
		
		public function display_lplan(){
			$query=$this->conn->prepare("SELECT * FROM `loan_plan`") or die($this->conn->error);
			if($query->execute()){
				$result = $query->get_result();
				return $result;
			}
		}
		
		
		public function delete_lplan($lplan_id){
			$query=$this->conn->prepare("DELETE FROM `loan_plan` WHERE `lplan_id` = '$lplan_id'") or die($this->conn->error);
			if($query->execute()){
				$query->close();
				$this->conn->close();
				return true;
			}
		}
		
		public function update_lplan($lplan_id,$lplan_month,$lplan_interest,$lplan_penalty){
			$query=$this->conn->prepare("UPDATE `loan_plan` SET `lplan_month`=?, `lplan_interest`=?, `lplan_penalty`=? WHERE `lplan_id`=?") or die($this->conn->error);
			$query->bind_param("idii", $lplan_month, $lplan_interest, $lplan_penalty, $lplan_id);
			
			if($query->execute()){
				$query->close();
				$this->conn->close();
				return true;
			}
		}
		
		/* Borrower Function */
		
		public function save_borrower($firstname,$middlename,$lastname,$contact_no,$address,$email,$tax_id){
			$query=$this->conn->prepare("INSERT INTO `borrower` (`firstname`, `middlename`, `lastname`, `contact_no`, `address`, `email`, `tax_id`) VALUES(?, ?, ?, ?, ?, ?, ?)") or die($this->conn->error);
			$query->bind_param("ssssssi", $firstname, $middlename, $lastname, $contact_no, $address, $email, $tax_id);
			
			if($query->execute()){
				$query->close();
				$this->conn->close();
				return true;
			}
		}
		
		public function display_borrower(){
			$query=$this->conn->prepare("SELECT * FROM `borrower`") or die($this->conn->error);
			if($query->execute()){
				$result = $query->get_result();
				return $result;
			}
		}
		public function display_borrower_user($id){
			$query=$this->conn->prepare("SELECT * FROM `user` where user_id='$id'") or die($this->conn->error);
			if($query->execute()){
				$result = $query->get_result();
				return $result;
			}
		}
		
		public function delete_borrower($borrower_id){
			$query=$this->conn->prepare("DELETE FROM `borrower` WHERE `borrower_id` = '$borrower_id'") or die($this->conn->error);
			if($query->execute()){
				$query->close();
				$this->conn->close();
				return true;
			}
		}
		
		public function update_borrower($borrower_id,$firstname,$middlename,$lastname,$contact_no,$address,$email,$tax_id){
			$query=$this->conn->prepare("UPDATE `borrower` SET `firstname`=?, `middlename`=?, `lastname`=?, `contact_no`=?, `address`=?, `email`=?, `tax_id`=? WHERE `borrower_id`=?") or die($this->conn->error);
			$query->bind_param("ssssssii", $firstname, $middlename, $lastname, $contact_no, $address, $email, $tax_id, $borrower_id);
			
			if($query->execute()){
				$query->close();
				$this->conn->close();
				return true;
			}
		}
		
		/* Loan Function */
		
		public function save_loan($borrower,$ltype,$lplan,$loan_amount,$purpose, $date_created){
			$ref_no = mt_rand(1,99999999);
			
			$i=1;
			
			while($i==1){
				$query=$this->conn->prepare("SELECT * FROM `loan` WHERE `ref_no` ='$ref_no' ") or die($this->conn->error);
				
				$check=$query->num_rows;
				if($check > 0){
					$ref_no = mt_rand(1,99999999);
				}else{
					$i=0;
				}
				
			}
			
			$query=$this->conn->prepare("INSERT INTO `loan` (`ref_no`, `ltype_id`, `borrower_id`, `purpose`, `amount`, `lplan_id`, `date_created`) VALUES(?, ?, ?, ?, ?, ?, ?)") or die($this->conn->error);
			$query->bind_param("siisiis", $ref_no, $ltype, $borrower, $purpose, $loan_amount, $lplan, $date_created);
			
			if($query->execute()){
				$query->close();
				$this->conn->close();
				return true;
			}
		}
		
		// public function display_loan(){
		// 	$query=$this->conn->prepare("SELECT * FROM `loan` INNER JOIN `borrower` ON loan.borrower_id=borrower.borrower_id INNER JOIN `loan_type` ON loan.ltype_id=loan_type.ltype_id INNER JOIN `loan_plan` ON loan.lplan_id=loan_plan.lplan_id") or die($this->conn->error);
		// 	if($query->execute()){
		// 		$result = $query->get_result();
		// 		return $result;
		// 	}
		// }
		public function display_loan(){
			$query=$this->conn->prepare("SELECT * FROM `loan` INNER JOIN `user` ON loan.borrower_id=user.user_id 
			") or die($this->conn->error);
			if($query->execute()){
				$result = $query->get_result();
				return $result;
			}
		}
		public function display_loanUser($user){
			$query=$this->conn->prepare("SELECT * FROM `loan` INNER JOIN `user` ON loan.borrower_id=user.user_id where user.user_id='$user' 
			") or die($this->conn->error);
			if($query->execute()){
				$result = $query->get_result();
				return $result;
			}
		}
		public function display_loanUser2($user){
			$query=$this->conn->prepare("SELECT *,CAST(date_released AS DATE) as date_rel FROM `loan` INNER JOIN `user` ON loan.borrower_id=user.user_id LEFT JOIN loan_plan ON loan.lplan_id = loan_plan.lplan_id where user.user_id='$user' 
			") or die($this->conn->error);
			if($query->execute()){
				$result = $query->get_result();
				return $result;
			}
		}
		public function display_loanUserPlan($user){
			// $query=$this->conn->prepare("SELECT * FROM `loan` INNER JOIN `user` ON loan.borrower_id=user.user_id where user.user_id='$user' 
			// ") or die($this->conn->error);
						$query=$this->conn->prepare("SELECT * 
						FROM `loan` 
						INNER JOIN `loan_plan` 
						ON loan.lplan_id=loan_plan.lplan_id
						INNER JOIN `loan_type` 
						ON loan.ltype_id=loan_type.ltype_id
						INNER JOIN `user` 
						ON loan.borrower_id=user.user_id 
						where loan_id='$user' 
						") or die($this->conn->error);
			if($query->execute()){
				$result = $query->get_result();
				return $result;
			}
		}
		
		public function delete_loan($loan_id){
			$query=$this->conn->prepare("DELETE FROM `loan` WHERE `loan_id` = '$loan_id'") or die($this->conn->error);
			if($query->execute()){
				$query->close();
				$this->conn->close();
				return true;
			}
		}
		
		
		// public function update_loan($loan_id, $borrower, $ltype, $lplan, $loan_amount, $purpose, $status, $date_released){
		// 	$query=$this->conn->prepare("UPDATE `loan` SET `ltype_id`=?, `borrower_id`=?, `purpose`=?, `amount`=?, `lplan_id`=?, `status`=?, `date_released`=? WHERE `loan_id`=?") or die($this->conn->error);
		// 	$query->bind_param("iisiiisi", $ltype, $borrower, $purpose, $loan_amount, $lplan, $status, $date_released, $loan_id);
			
		// 	if($query->execute()){
		// 		$query->close();
		// 		$this->conn->close();
		// 		return true;
		// 	}
		// }
		public function update_loan($loan_id, $loan_status){
			$query=$this->conn->prepare("UPDATE `loan` SET `status`=? WHERE `loan_id`=?") or die($this->conn->error);
			$query->bind_param("ii", $loan_status,$loan_id);
			
			if($query->execute()){
				$query->close();
				$this->conn->close();
				return true;
			}
		}
		public function update_release($loan_id, $loan_status){
			$query=$this->conn->prepare("UPDATE `loan` SET `status`=?,date_released=current_timestamp() WHERE `loan_id`=?") or die($this->conn->error);
			$query->bind_param("ii", $loan_status,$loan_id);
			
			if($query->execute()){
				$query->close();
				return true;
			}
		}
		public function update_payment($loan_id, $payment,$paymentNumber){
			$query=$this->conn->prepare("UPDATE `loan` SET `balance` = ?, paymentNumber=? WHERE `loan`.`loan_id` = ?") or die($this->conn->error);
			$query->bind_param("iii", $payment,$paymentNumber,$loan_id);
			
			if($query->execute()){
				return true;
			}
		}
		public function check_loan($loan_id){
			$query=$this->conn->prepare("SELECT * FROM `loan` WHERE `loan_id`='$loan_id'") or die($this->conn->error);
			if($query->execute()){
				$result = $query->get_result();
				return $result;
			}
		}
		
		public function check_lplan($lplan){
			$query=$this->conn->prepare("SELECT * FROM `loan_plan` WHERE `lplan_id`='$lplan'") or die($this->conn->error);
			if($query->execute()){
				$result = $query->get_result();
				return $result;
			}
		}
		
		/* Loan Schedule Function */
		
		public function save_date_sched($loan_id, $date_schedule){
			$query=$this->conn->prepare("INSERT INTO `loan_schedule` (`loan_id`, `due_date`) VALUES(?, ?)") or die($this->conn->error);
			$query->bind_param("is", $loan_id, $date_schedule);
			
			if($query->execute()){
				return true;
			}
		}
		public function loansched($loan_id, $date_schedule){
			$query=$this->conn->prepare("INSERT INTO `loan_schedule` (`loan_id`, `due_date`) VALUES(?, ?)") or die($this->conn->error);
			$query->bind_param("is", $loan_id, $date_schedule);
			
			if($query->execute()){
				return true;
			}
		}
		
		/* Payment Function */
		
		public function display_payment(){
			$query=$this->conn->prepare("SELECT * FROM `payment`") or die($this->conn->error);
			if($query->execute()){
				$result = $query->get_result();
				return $result;
			}
		}
		public function display_type(){
			$query=$this->conn->prepare("SELECT * FROM `loan_type`") or die($this->conn->error);
			if($query->execute()){
				$result = $query->get_result();
				return $result;
			}
		}
		
		public function save_payment($loan_id, $payee, $payment, $penalty, $overdue){
			$query=$this->conn->prepare("INSERT INTO `payment` (`loan_id`, `payee`, `pay_amount`, `penalty`, `overdue`) VALUES(?, ?, ?, ?, ?)") or die($this->conn->error);
			$query->bind_param("isssi", $loan_id, $payee, $payment, $penalty, $overdue);
			
			if($query->execute()){
				return true;
			}
		}

		// Message Functions

		public function sendMessage($user_id1,$message1){
			$user_id= $this->conn->real_escape_string($user_id1);
			$message= $this->conn->real_escape_string($message1);
			$query=$this->conn->prepare("INSERT INTO `message` (`user_id`, `message`) VALUES (?,?)") or die($this->conn->error);
			$query->bind_param("is", $user_id,$message);
			
			if($query->execute()){
				$query->close();
				$this->conn->close();
				return true;
			}
		}
		public function sendMessageAdmin($user_id1,$message1){
			$user_id= $this->conn->real_escape_string($user_id1);
			$message= $this->conn->real_escape_string($message1);
			$admin="admin";
			$query=$this->conn->prepare("INSERT INTO `message` (`user_id`,sent, `message`) VALUES (?,?,?)") or die($this->conn->error);
			$query->bind_param("iss", $user_id,$admin,$message);
			
			if($query->execute()){
				$query->close();
				$this->conn->close();
				return true;
			}
		}
		public function displayMessage($user){
			$query=$this->conn->prepare("SELECT *
			FROM ( SELECT a.*,b.firstname,b.middlename,b.lastname
				  FROM message as a
				  LEFT JOIN user as b 
				  ON a.user_id = b.user_id
				  WHERE a.user_id='$user'
				  ORDER BY message_date DESC LIMIT 5 )Var1
			WHERE user_id='$user'
			ORDER BY message_date ASC") or die($this->conn->error);
			if($query->execute()){
				$result = $query->get_result();
				return $result;
			}
		}
		
		public function displayAllMessageUser(){
			$query=$this->conn->prepare("SELECT a.*,b.firstname,b.middlename,b.lastname 
			FROM message as a
			LEFT JOIN user as b
			ON a.user_id=b.user_id
			GROUP BY a.user_id
			") or die($this->conn->error);
			if($query->execute()){
				$result = $query->get_result();
				return $result;
			}
		}
		public function displayAllMessage($user){
			$query=$this->conn->prepare("SELECT *
			FROM ( SELECT * FROM message  ORDER BY message_date DESC )Var1 WHERE user_id='$user'
			ORDER BY message_date ASC") or die($this->conn->error);
			if($query->execute()){
				$result = $query->get_result();
				return $result;
			}
		}
		// user Loan Functions

		public function userLoan($type,$plan,$user,$loan,$comakerName,$comakerEmail,$comakerUid,$comakerName2,$comakerEmail2,$comakerUid2){
			$type_id= $this->conn->real_escape_string($type);
			$plan_id= $this->conn->real_escape_string($plan);

			$user_id= $this->conn->real_escape_string($user);
			$loan= $this->conn->real_escape_string($loan);
			$comakerName= $this->conn->real_escape_string($comakerName);
			$comakerEmail= htmlentities($comakerEmail);
			$comakerUid= htmlentities($comakerUid);
			$comakerName2= $this->conn->real_escape_string($comakerName2);
			$comakerEmail2= htmlentities($comakerEmail2);
			$comakerUid2= htmlentities($comakerUid2);
			$status=0;
			$query=$this->conn->prepare("INSERT INTO `loan` (ref_no,ltype_id,`borrower_id`,amount,lplan_id, `status`,comakerName,comakerEmail,comakerUid,balance,cmname2,cmemail2,cmuid2) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)") or die($this->conn->error);

			$query->bind_param("siiiiisssisss",$comakerUid,$type_id,$user_id,$loan,$plan_id,$status,$comakerName,$comakerEmail,$comakerUid,$loan,$comakerName2,$comakerEmail2,$comakerUid2);
			
			if($query->execute()){
				$query->close();
				$this->conn->close();
				return true;
			}
		}
			// Announcement Functions

			public function addAnnouncement($details,$image){
				$details= $this->conn->real_escape_string($details);
				$query=$this->conn->prepare("INSERT INTO `announcement` (`announcement_details`,img) VALUES (?,?)") or die($this->conn->error);
				$query->bind_param("ss", $details,$image);
				
				if($query->execute()){
					$query->close();
					$this->conn->close();
					return true;
				}
			}
			public function displayAnnouncement(){
				$query=$this->conn->prepare("SELECT * FROM `announcement`") or die($this->conn->error);
				if($query->execute()){
					$result = $query->get_result();
					return $result;
				}
			}
			public function updateAnnouncement($details,$id){
				$details= $this->conn->real_escape_string($details);
				$query=$this->conn->prepare("UPDATE `announcement` SET `announcement_details`=? where announcement_id=$id") or die($this->conn->error);
				$query->bind_param("s", $details);
				
				if($query->execute()){
					$query->close();
					$this->conn->close();
					return true;
				}
			}
			
			public function VerifyEmail($email,$uid){

				$email= htmlentities($email);
				$uid= $this->conn->real_escape_string($uid);

				$query=$this->conn->prepare("UPDATE `loan` SET `comakerStatus` = '1' WHERE `loan`.`comakerUid` = ? and comakerEmail = ?") or die($this->conn->error);
				$query->bind_param("ss", $uid,$email);
				
				if($query->execute()){
					$query->close();
					$this->conn->close();
					return true;
				}
			}
			public function VerifyEmail2($email,$uid){

				$email= htmlentities($email);
				$uid= $this->conn->real_escape_string($uid);

				$query=$this->conn->prepare("UPDATE `loan` SET `cm2status` = '1' WHERE `loan`.`cmuid2` = ? and cmemail2 = ?") or die($this->conn->error);
				$query->bind_param("ss", $uid,$email);
				
				if($query->execute()){
					$query->close();
					$this->conn->close();
					return true;
				}
			}
			
			public function paymentComplete($uid){
				$uid= $this->conn->real_escape_string($uid);

				$query=$this->conn->prepare("UPDATE `loan` SET `status` = '3' WHERE `loan`.`loan_id` = ?") or die($this->conn->error);
				$query->bind_param("s", $uid);
				
				if($query->execute()){
					$query->close();
					return true;
				}
			}
			public function deleteAnnouncement($id){
				$id= $this->conn->real_escape_string($id);
				$query=$this->conn->prepare("DELETE FROM `announcement` WHERE `announcement_id` = '$id'") or die($this->conn->error);
				if($query->execute()){
					$query->close();
					$this->conn->close();
					return true;
				}
			}

			// new
			public function checkLoanVerifier($id){
				$id= $this->conn->real_escape_string($id);
				$query=$this->conn->prepare("SELECT * FROM `loan` WHERE `borrower_id`= '$id' and ( status =0 or status =2 or status  =1)");
				if($query->execute()){
					$result = $query->get_result();
					return $result;
				}
			}
			public function checkLoan($loan_id){
				$loan_id = htmlentities($loan_id);

				$query=$this->conn->prepare("SELECT a.*,b.lplan_month 
				FROM loan as a 
				LEFT JOIN loan_plan as b 
				ON a.lplan_id = b.lplan_id
				WHERE a.loan_id = '$loan_id'");

				if($query->execute()){
					$result = $query->get_result();
					return $result;
				}
			}

	}
	
?>